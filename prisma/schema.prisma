generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  //* Next Auth
  id       String    @id @default(cuid())
  name     String
  email    String?   @unique
  image    String    @default("https://utfs.io/f/309dd8c4-0329-41cf-ba9e-4cce72910d54-nm33wo.jpg")
  accounts Account[]
  sessions Session[]

  //* Custon Values
  bio      String?
  Thread   Thread[]
  username String?  @unique
}

model Thread {
  id        String   @id @default(uuid())
  text      String
  createdAt DateTime @default(now())
  parentId  String?

  author     User   @relation(fields: [userUserId], references: [id])
  userUserId String

  children Thread[] @relation("ThreadToChildren")
  parent   Thread?  @relation("ThreadToChildren", fields: [threadId], references: [id])
  threadId String?
}

//! Next Auth 

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
